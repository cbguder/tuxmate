// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TuxMate {
    
    
    public partial class PreferencesDialog {
        
        private Gtk.Notebook notebook3;
        
        private Gtk.Fixed fixed1;
        
        private Gtk.Label label8;
        
        private Gtk.Label label7;
        
        private Gtk.CheckButton showRightMarginIndicator;
        
        private Gtk.CheckButton highlightRightMargin;
        
        private Gtk.CheckButton highlightCurrentLine;
        
        private Gtk.CheckButton displayGroupsAndFoldersInBold;
        
        private Gtk.Label label3;
        
        private Gtk.Fixed fixed2;
        
        private Gtk.CheckButton reindentPastedText;
        
        private Gtk.CheckButton autopairCharacters;
        
        private Gtk.Label label4;
        
        private Gtk.Fixed fixed3;
        
        private Gtk.Label label9;
        
        private Gtk.CheckButton useSystemFont;
        
        private Gtk.FontButton fontButton;
        
        private Gtk.Label fontLabel;
        
        private Gtk.Label label5;
        
        private Gtk.Fixed fixed4;
        
        private Gtk.Label label1;
        
        private Gtk.ComboBox combobox1;
        
        private Gtk.Label label2;
        
        private Gtk.ComboBox combobox2;
        
        private Gtk.Label label6;
        
        private Gtk.Button buttonClose;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget TuxMate.PreferencesDialog
            this.Name = "TuxMate.PreferencesDialog";
            this.Title = Mono.Unix.Catalog.GetString("TuxMate Preferences");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Resizable = false;
            this.AllowGrow = false;
            this.HasSeparator = false;
            // Internal child TuxMate.PreferencesDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.notebook3 = new Gtk.Notebook();
            this.notebook3.CanFocus = true;
            this.notebook3.Name = "notebook3";
            this.notebook3.CurrentPage = 0;
            // Container child notebook3.Gtk.Notebook+NotebookChild
            this.fixed1 = new Gtk.Fixed();
            this.fixed1.Name = "fixed1";
            this.fixed1.HasWindow = false;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.label8 = new Gtk.Label();
            this.label8.Name = "label8";
            this.label8.LabelProp = Mono.Unix.Catalog.GetString("<b>Project Drawer</b>");
            this.label8.UseMarkup = true;
            this.label8.Justify = ((Gtk.Justification)(1));
            this.fixed1.Add(this.label8);
            Gtk.Fixed.FixedChild w2 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.label8]));
            w2.X = 10;
            w2.Y = 110;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.label7 = new Gtk.Label();
            this.label7.Name = "label7";
            this.label7.LabelProp = Mono.Unix.Catalog.GetString("<b>Visual Ornaments</b>");
            this.label7.UseMarkup = true;
            this.label7.Justify = ((Gtk.Justification)(1));
            this.fixed1.Add(this.label7);
            Gtk.Fixed.FixedChild w3 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.label7]));
            w3.X = 10;
            w3.Y = 10;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.showRightMarginIndicator = new Gtk.CheckButton();
            this.showRightMarginIndicator.CanFocus = true;
            this.showRightMarginIndicator.Name = "showRightMarginIndicator";
            this.showRightMarginIndicator.Label = Mono.Unix.Catalog.GetString("Show right margin indicator");
            this.showRightMarginIndicator.DrawIndicator = true;
            this.showRightMarginIndicator.UseUnderline = true;
            this.fixed1.Add(this.showRightMarginIndicator);
            Gtk.Fixed.FixedChild w4 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.showRightMarginIndicator]));
            w4.X = 25;
            w4.Y = 55;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.highlightRightMargin = new Gtk.CheckButton();
            this.highlightRightMargin.Sensitive = false;
            this.highlightRightMargin.CanFocus = true;
            this.highlightRightMargin.Name = "highlightRightMargin";
            this.highlightRightMargin.Label = Mono.Unix.Catalog.GetString("Highlight right margin");
            this.highlightRightMargin.DrawIndicator = true;
            this.highlightRightMargin.UseUnderline = true;
            this.fixed1.Add(this.highlightRightMargin);
            Gtk.Fixed.FixedChild w5 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.highlightRightMargin]));
            w5.X = 40;
            w5.Y = 75;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.highlightCurrentLine = new Gtk.CheckButton();
            this.highlightCurrentLine.CanFocus = true;
            this.highlightCurrentLine.Name = "highlightCurrentLine";
            this.highlightCurrentLine.Label = Mono.Unix.Catalog.GetString("Highlight current line");
            this.highlightCurrentLine.DrawIndicator = true;
            this.highlightCurrentLine.UseUnderline = true;
            this.fixed1.Add(this.highlightCurrentLine);
            Gtk.Fixed.FixedChild w6 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.highlightCurrentLine]));
            w6.X = 25;
            w6.Y = 35;
            // Container child fixed1.Gtk.Fixed+FixedChild
            this.displayGroupsAndFoldersInBold = new Gtk.CheckButton();
            this.displayGroupsAndFoldersInBold.CanFocus = true;
            this.displayGroupsAndFoldersInBold.Name = "displayGroupsAndFoldersInBold";
            this.displayGroupsAndFoldersInBold.Label = Mono.Unix.Catalog.GetString("Display groups and folders in bold");
            this.displayGroupsAndFoldersInBold.DrawIndicator = true;
            this.displayGroupsAndFoldersInBold.UseUnderline = true;
            this.fixed1.Add(this.displayGroupsAndFoldersInBold);
            Gtk.Fixed.FixedChild w7 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.displayGroupsAndFoldersInBold]));
            w7.X = 25;
            w7.Y = 135;
            this.notebook3.Add(this.fixed1);
            // Notebook tab
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("General");
            this.notebook3.SetTabLabel(this.fixed1, this.label3);
            this.label3.ShowAll();
            // Container child notebook3.Gtk.Notebook+NotebookChild
            this.fixed2 = new Gtk.Fixed();
            this.fixed2.Name = "fixed2";
            this.fixed2.HasWindow = false;
            // Container child fixed2.Gtk.Fixed+FixedChild
            this.reindentPastedText = new Gtk.CheckButton();
            this.reindentPastedText.CanFocus = true;
            this.reindentPastedText.Name = "reindentPastedText";
            this.reindentPastedText.Label = Mono.Unix.Catalog.GetString("Re-indent pasted text");
            this.reindentPastedText.Active = true;
            this.reindentPastedText.DrawIndicator = true;
            this.reindentPastedText.UseUnderline = true;
            this.fixed2.Add(this.reindentPastedText);
            Gtk.Fixed.FixedChild w9 = ((Gtk.Fixed.FixedChild)(this.fixed2[this.reindentPastedText]));
            w9.X = 10;
            w9.Y = 10;
            // Container child fixed2.Gtk.Fixed+FixedChild
            this.autopairCharacters = new Gtk.CheckButton();
            this.autopairCharacters.CanFocus = true;
            this.autopairCharacters.Name = "autopairCharacters";
            this.autopairCharacters.Label = Mono.Unix.Catalog.GetString("Auto-pair characters (quotes etc.)");
            this.autopairCharacters.Active = true;
            this.autopairCharacters.DrawIndicator = true;
            this.autopairCharacters.UseUnderline = true;
            this.fixed2.Add(this.autopairCharacters);
            Gtk.Fixed.FixedChild w10 = ((Gtk.Fixed.FixedChild)(this.fixed2[this.autopairCharacters]));
            w10.X = 10;
            w10.Y = 30;
            this.notebook3.Add(this.fixed2);
            Gtk.Notebook.NotebookChild w11 = ((Gtk.Notebook.NotebookChild)(this.notebook3[this.fixed2]));
            w11.Position = 1;
            // Notebook tab
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("Text Editing");
            this.notebook3.SetTabLabel(this.fixed2, this.label4);
            this.label4.ShowAll();
            // Container child notebook3.Gtk.Notebook+NotebookChild
            this.fixed3 = new Gtk.Fixed();
            this.fixed3.Name = "fixed3";
            this.fixed3.HasWindow = false;
            // Container child fixed3.Gtk.Fixed+FixedChild
            this.label9 = new Gtk.Label();
            this.label9.Name = "label9";
            this.label9.LabelProp = Mono.Unix.Catalog.GetString("<b>Font</b>");
            this.label9.UseMarkup = true;
            this.fixed3.Add(this.label9);
            Gtk.Fixed.FixedChild w12 = ((Gtk.Fixed.FixedChild)(this.fixed3[this.label9]));
            w12.X = 10;
            w12.Y = 10;
            // Container child fixed3.Gtk.Fixed+FixedChild
            this.useSystemFont = new Gtk.CheckButton();
            this.useSystemFont.CanFocus = true;
            this.useSystemFont.Name = "useSystemFont";
            this.useSystemFont.Label = Mono.Unix.Catalog.GetString("Use the system fixed-width font");
            this.useSystemFont.Active = true;
            this.useSystemFont.DrawIndicator = true;
            this.useSystemFont.UseUnderline = true;
            this.fixed3.Add(this.useSystemFont);
            Gtk.Fixed.FixedChild w13 = ((Gtk.Fixed.FixedChild)(this.fixed3[this.useSystemFont]));
            w13.X = 25;
            w13.Y = 35;
            // Container child fixed3.Gtk.Fixed+FixedChild
            this.fontButton = new Gtk.FontButton();
            this.fontButton.Sensitive = false;
            this.fontButton.CanFocus = true;
            this.fontButton.Name = "fontButton";
            this.fontButton.FontName = "monospace 10";
            this.fontButton.UseFont = true;
            this.fontButton.UseSize = true;
            this.fixed3.Add(this.fontButton);
            Gtk.Fixed.FixedChild w14 = ((Gtk.Fixed.FixedChild)(this.fixed3[this.fontButton]));
            w14.X = 67;
            w14.Y = 60;
            // Container child fixed3.Gtk.Fixed+FixedChild
            this.fontLabel = new Gtk.Label();
            this.fontLabel.Sensitive = false;
            this.fontLabel.Name = "fontLabel";
            this.fontLabel.LabelProp = Mono.Unix.Catalog.GetString("Font:");
            this.fixed3.Add(this.fontLabel);
            Gtk.Fixed.FixedChild w15 = ((Gtk.Fixed.FixedChild)(this.fixed3[this.fontLabel]));
            w15.X = 25;
            w15.Y = 67;
            this.notebook3.Add(this.fixed3);
            Gtk.Notebook.NotebookChild w16 = ((Gtk.Notebook.NotebookChild)(this.notebook3[this.fixed3]));
            w16.Position = 2;
            // Notebook tab
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("Fonts & Colors");
            this.notebook3.SetTabLabel(this.fixed3, this.label5);
            this.label5.ShowAll();
            // Container child notebook3.Gtk.Notebook+NotebookChild
            this.fixed4 = new Gtk.Fixed();
            this.fixed4.Name = "fixed4";
            this.fixed4.HasWindow = false;
            // Container child fixed4.Gtk.Fixed+FixedChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("File Encoding:");
            this.fixed4.Add(this.label1);
            Gtk.Fixed.FixedChild w17 = ((Gtk.Fixed.FixedChild)(this.fixed4[this.label1]));
            w17.X = 10;
            w17.Y = 17;
            // Container child fixed4.Gtk.Fixed+FixedChild
            this.combobox1 = Gtk.ComboBox.NewText();
            this.combobox1.AppendText(Mono.Unix.Catalog.GetString("ISO-8859-1 (Latin 1)"));
            this.combobox1.AppendText(Mono.Unix.Catalog.GetString("ISO-8859-1 (Windows)"));
            this.combobox1.AppendText(Mono.Unix.Catalog.GetString("UTF8 (recommended)"));
            this.combobox1.AppendText(Mono.Unix.Catalog.GetString("UTF16 (Big Endian)"));
            this.combobox1.AppendText(Mono.Unix.Catalog.GetString("UTF16 (Little Endian)"));
            this.combobox1.Name = "combobox1";
            this.combobox1.Active = 2;
            this.fixed4.Add(this.combobox1);
            Gtk.Fixed.FixedChild w18 = ((Gtk.Fixed.FixedChild)(this.fixed4[this.combobox1]));
            w18.X = 105;
            w18.Y = 10;
            // Container child fixed4.Gtk.Fixed+FixedChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Line Endings:");
            this.fixed4.Add(this.label2);
            Gtk.Fixed.FixedChild w19 = ((Gtk.Fixed.FixedChild)(this.fixed4[this.label2]));
            w19.X = 14;
            w19.Y = 57;
            // Container child fixed4.Gtk.Fixed+FixedChild
            this.combobox2 = Gtk.ComboBox.NewText();
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("LF (recommended)"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("CR (Mac OS Classic)"));
            this.combobox2.AppendText(Mono.Unix.Catalog.GetString("CRLF (Windows)"));
            this.combobox2.Name = "combobox2";
            this.combobox2.Active = 0;
            this.fixed4.Add(this.combobox2);
            Gtk.Fixed.FixedChild w20 = ((Gtk.Fixed.FixedChild)(this.fixed4[this.combobox2]));
            w20.X = 105;
            w20.Y = 50;
            this.notebook3.Add(this.fixed4);
            Gtk.Notebook.NotebookChild w21 = ((Gtk.Notebook.NotebookChild)(this.notebook3[this.fixed4]));
            w21.Position = 3;
            // Notebook tab
            this.label6 = new Gtk.Label();
            this.label6.Name = "label6";
            this.label6.LabelProp = Mono.Unix.Catalog.GetString("Advanced");
            this.notebook3.SetTabLabel(this.fixed4, this.label6);
            this.label6.ShowAll();
            w1.Add(this.notebook3);
            Gtk.Box.BoxChild w22 = ((Gtk.Box.BoxChild)(w1[this.notebook3]));
            w22.Position = 0;
            w22.Expand = false;
            w22.Fill = false;
            // Internal child TuxMate.PreferencesDialog.ActionArea
            Gtk.HButtonBox w23 = this.ActionArea;
            w23.Name = "dialog1_ActionArea";
            w23.Spacing = 6;
            w23.BorderWidth = ((uint)(5));
            w23.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonClose = new Gtk.Button();
            this.buttonClose.CanDefault = true;
            this.buttonClose.CanFocus = true;
            this.buttonClose.Name = "buttonClose";
            this.buttonClose.UseStock = true;
            this.buttonClose.UseUnderline = true;
            this.buttonClose.Label = "gtk-close";
            this.AddActionWidget(this.buttonClose, -7);
            Gtk.ButtonBox.ButtonBoxChild w24 = ((Gtk.ButtonBox.ButtonBoxChild)(w23[this.buttonClose]));
            w24.Expand = false;
            w24.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 562;
            this.DefaultHeight = 483;
            this.Show();
            this.showRightMarginIndicator.Clicked += new System.EventHandler(this.OnShowRightMarginIndicatorClicked);
            this.useSystemFont.Clicked += new System.EventHandler(this.OnUseSystemFontClicked);
        }
    }
}
