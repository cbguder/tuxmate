// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TuxMate {
    
    
    public partial class MainWindow {
        
        private Gtk.Action FileAction;
        
        private Gtk.Action EditAction;
        
        private Gtk.Action ViewAction;
        
        private Gtk.Action NewAction;
        
        private Gtk.Action OpenAction;
        
        private Gtk.Action SaveAction;
        
        private Gtk.Action SaveAsAction;
        
        private Gtk.Action CloseAction;
        
        private Gtk.Action QuitAction;
        
        private Gtk.Action PreferencesAction;
        
        private Gtk.Action HelpAction;
        
        private Gtk.Action AboutAction;
        
        private Gtk.VBox vbox;
        
        private Gtk.MenuBar menuBar;
        
        private Gtk.ScrolledWindow GtkScrolledWindow;
        
        private Gtk.TextView textView;
        
        private Gtk.Statusbar statusbar;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget TuxMate.MainWindow
            Gtk.UIManager w1 = new Gtk.UIManager();
            Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
            this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("_File"), null, null);
            this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
            w2.Add(this.FileAction, null);
            this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("_Edit"), null, null);
            this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("_Edit");
            w2.Add(this.EditAction, null);
            this.ViewAction = new Gtk.Action("ViewAction", Mono.Unix.Catalog.GetString("_View"), null, null);
            this.ViewAction.ShortLabel = Mono.Unix.Catalog.GetString("_View");
            w2.Add(this.ViewAction, null);
            this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("_New"), null, "gtk-new");
            this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("_New");
            w2.Add(this.NewAction, null);
            this.OpenAction = new Gtk.Action("OpenAction", Mono.Unix.Catalog.GetString("_Open"), null, "gtk-open");
            this.OpenAction.ShortLabel = Mono.Unix.Catalog.GetString("_Open");
            w2.Add(this.OpenAction, null);
            this.SaveAction = new Gtk.Action("SaveAction", Mono.Unix.Catalog.GetString("_Save"), null, "gtk-save");
            this.SaveAction.ShortLabel = Mono.Unix.Catalog.GetString("_Save");
            w2.Add(this.SaveAction, null);
            this.SaveAsAction = new Gtk.Action("SaveAsAction", Mono.Unix.Catalog.GetString("Save _As..."), null, "gtk-save-as");
            this.SaveAsAction.ShortLabel = Mono.Unix.Catalog.GetString("Save _As...");
            w2.Add(this.SaveAsAction, "<Control><Shift>s");
            this.CloseAction = new Gtk.Action("CloseAction", Mono.Unix.Catalog.GetString("_Close"), null, "gtk-close");
            this.CloseAction.ShortLabel = Mono.Unix.Catalog.GetString("_Close");
            w2.Add(this.CloseAction, null);
            this.QuitAction = new Gtk.Action("QuitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
            this.QuitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
            w2.Add(this.QuitAction, null);
            this.PreferencesAction = new Gtk.Action("PreferencesAction", Mono.Unix.Catalog.GetString("_Preferences"), null, "gtk-preferences");
            this.PreferencesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Preferences");
            w2.Add(this.PreferencesAction, null);
            this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("Help"), null, null);
            this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("Help");
            w2.Add(this.HelpAction, null);
            this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("_About"), null, "gtk-about");
            this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("_About");
            w2.Add(this.AboutAction, null);
            w1.InsertActionGroup(w2, 0);
            this.AddAccelGroup(w1.AccelGroup);
            this.Name = "TuxMate.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("TuxMate");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.DefaultWidth = 800;
            this.DefaultHeight = 600;
            // Container child TuxMate.MainWindow.Gtk.Container+ContainerChild
            this.vbox = new Gtk.VBox();
            this.vbox.Name = "vbox";
            this.vbox.Spacing = 2;
            // Container child vbox.Gtk.Box+BoxChild
            w1.AddUiFromString("<ui><menubar name='menuBar'><menu action='FileAction'><menuitem action='NewAction'/><menuitem action='OpenAction'/><menuitem action='SaveAction'/><menuitem action='SaveAsAction'/><separator/><menuitem action='CloseAction'/><menuitem action='QuitAction'/></menu><menu action='EditAction'><menuitem action='PreferencesAction'/></menu><menu action='ViewAction'/><menu action='HelpAction'><menuitem action='AboutAction'/></menu></menubar></ui>");
            this.menuBar = ((Gtk.MenuBar)(w1.GetWidget("/menuBar")));
            this.menuBar.Name = "menuBar";
            this.vbox.Add(this.menuBar);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox[this.menuBar]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox.Gtk.Box+BoxChild
            this.GtkScrolledWindow = new Gtk.ScrolledWindow();
            this.GtkScrolledWindow.Name = "GtkScrolledWindow";
            this.GtkScrolledWindow.ShadowType = ((Gtk.ShadowType)(1));
            // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
            this.textView = new Gtk.TextView();
            this.textView.CanFocus = true;
            this.textView.Name = "textView";
            this.textView.LeftMargin = 2;
            this.GtkScrolledWindow.Add(this.textView);
            this.vbox.Add(this.GtkScrolledWindow);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox[this.GtkScrolledWindow]));
            w5.Position = 1;
            // Container child vbox.Gtk.Box+BoxChild
            this.statusbar = new Gtk.Statusbar();
            this.statusbar.Name = "statusbar";
            this.statusbar.Spacing = 6;
            this.vbox.Add(this.statusbar);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox[this.statusbar]));
            w6.Position = 2;
            w6.Expand = false;
            w6.Fill = false;
            this.Add(this.vbox);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.NewAction.Activated += new System.EventHandler(this.OnNewActionActivated);
            this.OpenAction.Activated += new System.EventHandler(this.OnOpenActionActivated);
            this.SaveAction.Activated += new System.EventHandler(this.OnSaveActionActivated);
            this.SaveAsAction.Activated += new System.EventHandler(this.OnSaveAsActionActivated);
            this.QuitAction.Activated += new System.EventHandler(this.OnQuitActionActivated);
            this.PreferencesAction.Activated += new System.EventHandler(this.OnPreferencesActionActivated);
            this.AboutAction.Activated += new System.EventHandler(this.OnAboutActionActivated);
        }
    }
}
